<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCShopping.mapper.CartMapper">
<!-- 이전에는 생성자를 이용한 map을 했다면 이번에는 setter를 이용한 map을 해보겠습니다. -->
<resultMap type="goods" id="goodsResultMap">
<!-- id는 primary key컬럼을 result는 일반 컬럼을 적어줍니다. -->
<!-- column은 테이블의 컬럼명을, jdbcType은 컬럼의 type을, property는 컬럼에 해당하는 멤버필드를 적어줍니다. -->
	<id column="goods_Num" jdbcType="VARCHAR" property="goodsNum"/>
	<result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
	<!-- 컬럼타입이 integer나  number와 같은 경우 BIGINT를 적어줍니다. -->
	<result column="goods_price" jdbcType="BIGINT" property="goodsPrice"/>
	<result column="goods_content" jdbcType="VARCHAR" property="goodsContent"/>
	<result column="delivery_cost" jdbcType="BIGINT" property="deliveryCost"/>
	<result column="emp_num" jdbcType="VARCHAR" property="empNum"/>
	<!-- 컬럼타입이 date인경우 DATE를 적어주며 timestamp인 경우 TIMESTAMP를 적어줍니다. -->
	<result column="goods_regist" jdbcType="DATE" property="goodsRegist"/>
	<result column="goods_main_store" jdbcType="VARCHAR" property="goodsMainStore"/>
	<result column="goods_main_store_img" jdbcType="VARCHAR" property="goodsMainStoreImg"/>
	<result column="goods_images" jdbcType="VARCHAR" property="goodsImages"/>
	<result column="goods_images_img" jdbcType="VARCHAR" property="goodsImagesImg"/>
	<result column="visit_count" jdbcType="BIGINT" property="visitCount"/>
	<result column="update_Emp_Num" jdbcType="VARCHAR" property="updateEmpNum"/>
	<result column="goods_Update_Date" jdbcType="DATE" property="goodsUpdateDate"/>
</resultMap>
<select id="goodsSelectAll" resultMap="goodsResultMap">
	select goods_Num , goods_name , goods_price ,goods_content , delivery_cost , emp_num  
	  		,goods_regist , goods_main_store ,goods_main_store_img , goods_images 
	  		,goods_images_img , visit_count ,update_Emp_Num , goods_Update_Date
	from goods 
</select>
</mapper>