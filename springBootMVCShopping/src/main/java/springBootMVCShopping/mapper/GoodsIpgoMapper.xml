<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCShopping.mapper.GoodsIpgoMapper">
<insert id="goodsIpgoInsert" parameterType="goodsIpgo">
	insert into goodsipgo (IPGO_NUM, GOODS_NUM, IPGO_QTY, IPGO_DATE, MADE_DATE, ipgo_PRICE, EMP_NUM)
	values(#{ipgoNum},#{goodsNum},#{ipgoQty},#{ipgoDate},#{madeDate},#{ipgoPrice},#{empNum})
</insert>
<sql id="baseColumns">
IPGO_NUM , GOODS_NUM , IPGO_QTY , IPGO_DATE , MADE_DATE , ipgo_PRICE , EMP_NUM 
</sql>
<resultMap type="goodsIpgo" id="goodsIpgoResultMap">
	<constructor> <!-- dto에 있는 멤버필드 순서와 같아야 합니다. -->
		<idArg column="IPGO_NUM" javaType="string" />
		<idArg column="GOODS_NUM" javaType="string" />
		<arg column="IPGO_QTY" javaType="integer"/>
		<arg column="IPGO_DATE" javaType="java.util.Date"/>
		<arg column="MADE_DATE" javaType="java.util.Date"/>
		<arg column="ipgo_PRICE" javaType="integer"/>
		<arg column="EMP_NUM" javaType="string"/>
	</constructor>
</resultMap>
<select id="goodsIpgoAllSelect" resultMap="goodsIpgoResultMap"><!-- 여기서도 resultMap에서 생성자를 사용하겠습니다. -->
	select <include refid="baseColumns"/>
	from goodsipgo
	order by IPGO_NUM desc , GOODS_NUM
</select>
<select id="selectIpgoGoods" resultMap="goodsIpgoResultMap">
	select <include refid="baseColumns"/>
	from goodsipgo <!-- 마이바티스는 인자를 하나만 전달 하는데 여러개를 전달할 경우 arg0,arg1,arg2,..arg_n을쓸수있다. -->
	where IPGO_NUM = #{arg0} and GOODS_NUM = #{arg1}
</select>
<update id="goodsIpgoUpdate" parameterType="goodsIpgo">
update goodsIpgo 
set ipgo_Date = #{ipgoDate}, ipgo_Qty =#{ipgoQty} 
	, made_Date = #{madeDate} , ipgo_Price = #{ipgoPrice}
where ipgo_Num = #{ipgoNum} and goods_Num = #{goodsNum}
<!-- dto로 받아왔으므로 멤버필드명을 사용한다 -->
</update>
<delete id="ipgoGoodsNumDelete">
	delete from goodsipgo
	where ipgo_num = #{ipgoNum} and goods_num = #{goodsNum}
	<!-- arg0으로 사용하고 싶지 않다면 @Param을 사용하면 됩니다 -->
</delete>
</mapper>










